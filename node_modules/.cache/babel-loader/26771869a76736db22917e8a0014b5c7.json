{"ast":null,"code":"var _jsxFileName = \"/Users/minaghanna/Desktop/PayDay/src/Form.js\";\nimport React from \"react\";\n\nclass Form extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      expenses: [{\n        amount: \"\",\n        type: \"\"\n      }]\n    };\n\n    this.handleChange = e => {\n      if ([\"amount\", \"type\"].includes(e.target.className)) {\n        let expenses = [...this.state.expenses];\n        expenses[e.target.dataset.id][e.target.className] = e.target.value.toUpperCase();\n        this.setState({\n          expenses\n        }, () => console.log(this.state.expenses));\n      } else {\n        this.setState({\n          [e.target.name]: e.target.value.toUpperCase()\n        });\n      }\n    };\n\n    this.addExpense = e => {\n      this.setState(prevState => ({\n        expenses: [...prevState.expenses, {\n          amount: \"\",\n          type: \"\"\n        }]\n      }));\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n    };\n  }\n\n  render() {\n    let {\n      expenses\n    } = this.state;\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.addExpense,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Add another expense\"), expenses.map((val, idx) => {\n      let expenseAmount = `expense-${idx}`,\n          ageId = `expense-${idx}`;\n      return React.createElement(\"div\", {\n        key: idx,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: catId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, `Cat #${idx + 1}`), React.createElement(\"input\", {\n        type: \"text\",\n        name: catId,\n        \"data-id\": idx,\n        id: catId,\n        value: expenses[idx].name,\n        className: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: ageId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Age\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: ageId,\n        \"data-id\": idx,\n        id: ageId,\n        value: expenses[idx].age,\n        className: \"age\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }));\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/Users/minaghanna/Desktop/PayDay/src/Form.js"],"names":["React","Form","Component","state","expenses","amount","type","handleChange","e","includes","target","className","dataset","id","value","toUpperCase","setState","console","log","name","addExpense","prevState","handleSubmit","preventDefault","render","map","val","idx","expenseAmount","ageId","catId","age"],"mappings":"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","sourcesContent":["import React from \"react\"\nclass Form extends React.Component {\n  state = {\n    expenses: [{amount:\"\", type:\"\"}],\n  }\nhandleChange = (e) => {\n    if ([\"amount\", \"type\"].includes(e.target.className) ) {\n      let expenses = [...this.state.expenses]\n      expenses[e.target.dataset.id][e.target.className] = e.target.value.toUpperCase()\n      this.setState({ expenses }, () => console.log(this.state.expenses))\n    } else {\n      this.setState({ [e.target.name]: e.target.value.toUpperCase() })\n    }\n  }\naddExpense = (e) => {\n    this.setState((prevState) => ({\n      expenses: [...prevState.expenses, {amount:\"\", type:\"\"}],\n    }));\n  }\nhandleSubmit = (e) => { e.preventDefault() }\nrender() {\n    let {expenses} = this.state\n    return (\n      <form onSubmit={this.handleSubmit} onChange={this.handleChange} >\n        <button onClick={this.addExpense}>Add another expense</button>\n        {\n          expenses.map((val, idx)=> {\n            let expenseAmount = `expense-${idx}`, ageId = `expense-${idx}`\n            return (\n              <div key={idx}>\n                <label htmlFor={catId}>{`Cat #${idx + 1}`}</label>\n                <input\n                  type=\"text\"\n                  name={catId}\n                  data-id={idx}\n                  id={catId}\n                  value={expenses[idx].name} \n                  className=\"name\"\n                />\n                <label htmlFor={ageId}>Age</label>\n                <input\n                  type=\"text\"\n                  name={ageId}\n                  data-id={idx}\n                  id={ageId}\n                  value={expenses[idx].age} \n                  className=\"age\"\n                />\n              </div>\n            )\n          })\n        }\n        <input type=\"submit\" value=\"Submit\" /> \n      </form>\n    )\n  }\n}\nexport default Form;"]},"metadata":{},"sourceType":"module"}