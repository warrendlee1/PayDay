{"ast":null,"code":"var _jsxFileName = \"/Users/minaghanna/Desktop/PayDay/src/pages/Form.js\";\nimport React from \"react\";\n\nclass Form extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      expenses: [{\n        amount: \"\",\n        type: \"\"\n      }],\n      monthlyIncome: \"\"\n    };\n\n    this.handleChange = e => {\n      console.log('handleChange', e.target.name, e.target.value.toUpperCase());\n\n      if ([\"amount\", \"type\"].includes(e.target.className)) {\n        let expenses = [...this.state.expenses];\n        expenses[e.target.dataset.id][e.target.className] = e.target.value.toUpperCase();\n        this.setState({\n          expenses\n        }, () => console.log(this.state.expenses));\n      } else {\n        this.setState({\n          [e.target.name]: e.target.value.toUpperCase()\n        });\n      }\n    };\n\n    this.addExpense = e => {\n      this.setState(prevState => ({\n        expenses: [...prevState.expenses, {\n          amount: \"\",\n          type: \"\"\n        }]\n      }));\n    };\n\n    this.deleteExpense = e => {\n      this.setState(prevState => ({\n        expenses: prevState.data.filter(el => el != amount)\n      }));\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n    };\n  }\n\n  render() {\n    let {\n      expenses,\n      monthlyIncome\n    } = this.state;\n    console.log('rendering with state', this.state);\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Income: \"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"monthlyIncome\",\n      value: monthlyIncome,\n      className: \"monthlyIncome\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })), expenses.map((val, idx) => {\n      let expenseAmount = `expense-${idx}`,\n          expenseType = `expense-${idx}`;\n      return React.createElement(\"div\", {\n        key: idx,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: expenseAmount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, `expense #${idx + 1}`), React.createElement(\"input\", {\n        type: \"text\",\n        name: expenseAmount,\n        \"data-id\": idx,\n        id: expenseAmount,\n        value: expenses[idx].name,\n        className: \"amount\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: expenseType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Type\"), React.createElement(\"select\", {\n        value: expenses[idx].type,\n        \"data-id\": idx,\n        className: \"type\",\n        name: expenseType,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Select One\"), React.createElement(\"option\", {\n        value: \"Bills\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Bills\"), React.createElement(\"option\", {\n        value: \"Personal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Personal\"), React.createElement(\"option\", {\n        value: \"Emergency\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Emergency\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.addExpense,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Add another expense\"), React.createElement(\"button\", {\n        onClick: this.deleteExpense,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Delete\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }));\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Income: \", monthlyIncome), this.state.expenses.map(expense => {\n      return React.createElement(\"div\", {\n        key: `expense-${expense.type}-${expense.amount}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, expense.type, \" amount: \", expense.amount);\n    })));\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/Users/minaghanna/Desktop/PayDay/src/pages/Form.js"],"names":["React","Form","Component","state","expenses","amount","type","monthlyIncome","handleChange","e","console","log","target","name","value","toUpperCase","includes","className","dataset","id","setState","addExpense","prevState","deleteExpense","data","filter","el","handleSubmit","preventDefault","render","map","val","idx","expenseAmount","expenseType","expense"],"mappings":"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","sourcesContent":["import React from \"react\"\nclass Form extends React.Component {\n  state = {\n    expenses: [{amount:\"\", type:\"\"}],\n    monthlyIncome: \"\",\n  }\nhandleChange = (e) => {\n    console.log('handleChange', e.target.name, e.target.value.toUpperCase());\n    if ([\"amount\", \"type\"].includes(e.target.className) ) {\n      let expenses = [...this.state.expenses]\n      expenses[e.target.dataset.id][e.target.className] = e.target.value.toUpperCase()\n      this.setState({ expenses }, () => console.log(this.state.expenses))\n    } else {\n      this.setState({ [e.target.name]: e.target.value.toUpperCase() })\n    }\n  }\naddExpense = (e) => {\n    this.setState((prevState) => ({\n      expenses: [...prevState.expenses, {amount:\"\", type:\"\"}],\n    }));\n  }\ndeleteExpense = (e) => {\n  this.setState(prevState => ({\n  expenses: prevState.data.filter(el => el != amount )\n}));\n}\n\nhandleSubmit = (e) => { e.preventDefault() }\nrender() {\n    let {expenses, monthlyIncome} = this.state\n    console.log('rendering with state', this.state);\n    return (\n      <form onSubmit={this.handleSubmit} >\n        <div>\n          <label>Income: </label>\n          <input\n            type=\"text\"\n            name=\"monthlyIncome\"\n            value={monthlyIncome}\n            className=\"monthlyIncome\"\n            onChange={this.handleChange}\n            />\n        </div>\n        {\n          expenses.map((val, idx)=> {\n            let expenseAmount = `expense-${idx}`,\n                expenseType = `expense-${idx}`\n            return (\n              \n              <div key={idx}>\n                \n                <label htmlFor={expenseAmount}>{`expense #${idx + 1}`}</label>\n                <input\n                  type=\"text\"\n                  name={expenseAmount}\n                  data-id={idx}\n                  id={expenseAmount}\n                  value={expenses[idx].name} \n                  className=\"amount\"\n                  onChange={this.handleChange}\n                />\n                <label htmlFor={expenseType}>Type</label>\n                <select value={expenses[idx].type} data-id={idx} className=\"type\" name={expenseType} onChange={this.handleChange}>\n                  <option value=\"\">Select One</option>\n                  <option value=\"Bills\">Bills</option>\n                  <option value=\"Personal\">Personal</option>\n                  <option value=\"Emergency\">Emergency</option>\n                </select><br></br>\n                <button onClick={this.addExpense}>Add another expense</button>\n                <button onClick={this.deleteExpense}>Delete</button>\n                <p></p>\n              </div>\n            )\n          })\n        }\n        <input type=\"submit\" value=\"Submit\" /> \n        <div>\n          <div>Income: {monthlyIncome}</div>\n          {\n            this.state.expenses.map((expense) => {\n              return (\n                <div key={`expense-${expense.type}-${expense.amount}`}>{expense.type} amount: {expense.amount}</div>\n              )\n            })\n          }\n        </div>\n      </form>\n    )\n  }\n}\nexport default Form;"]},"metadata":{},"sourceType":"module"}