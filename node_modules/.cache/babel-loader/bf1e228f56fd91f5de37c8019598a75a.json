{"ast":null,"code":"var _jsxFileName = \"/Users/minaghanna/Desktop/PayDay/src/Form.js\";\nimport React from \"react\";\n\nclass Form extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      expenses: [{\n        amount: \"\",\n        type: \"\"\n      }],\n      income: [{\n        montlyIncome: \"\"\n      }]\n    };\n\n    this.handleChange = e => {\n      if ([\"amount\", \"type\"].includes(e.target.className)) {\n        let expenses = [...this.state.expenses];\n        expenses[e.target.dataset.id][e.target.className] = e.target.value.toUpperCase();\n        this.setState({\n          expenses\n        }, () => console.log(this.state.expenses));\n      } else {\n        this.setState({\n          [e.target.name]: e.target.value.toUpperCase()\n        });\n      }\n    };\n\n    this.addExpense = e => {\n      this.setState(prevState => ({\n        expenses: [...prevState.expenses, {\n          amount: \"\",\n          type: \"\"\n        }]\n      }));\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n    };\n  }\n\n  render() {\n    let {\n      expenses\n    } = this.state;\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    })), expenses.map((val, idx) => {\n      let expenseAmount = `expense-${idx}`,\n          expenseType = `expense-${idx}`;\n      return React.createElement(\"div\", {\n        key: idx,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: expenseAmount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, `expense #${idx + 1}`), React.createElement(\"input\", {\n        type: \"text\",\n        name: expenseAmount,\n        \"data-id\": idx,\n        id: expenseAmount,\n        value: expenses[idx].name,\n        className: \"amount\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: expenseType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Type\"), React.createElement(\"select\", {\n        value: expenses[idx].type,\n        \"data-id\": idx,\n        className: \"type\",\n        name: expenseType,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Select One\"), React.createElement(\"option\", {\n        value: \"Bills\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Bills\"), React.createElement(\"option\", {\n        value: \"Personal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Personal\"), React.createElement(\"option\", {\n        value: \"Emergency\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Emergency\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.addExpense,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Add another expense\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }));\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.state.expenses.map(expense => {\n      return React.createElement(\"div\", {\n        key: `expense-${expense.type}-${expense.amount}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Expense \", expense.type, \" amount: \", expense.amount);\n    })));\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/Users/minaghanna/Desktop/PayDay/src/Form.js"],"names":["React","Form","Component","state","expenses","amount","type","income","montlyIncome","handleChange","e","includes","target","className","dataset","id","value","toUpperCase","setState","console","log","name","addExpense","prevState","handleSubmit","preventDefault","render","map","val","idx","expenseAmount","expenseType","expense"],"mappings":"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","sourcesContent":["import React from \"react\"\nclass Form extends React.Component {\n  state = {\n    expenses: [{amount:\"\", type:\"\"}],\n    income: [{montlyIncome:\"\"}],\n  }\nhandleChange = (e) => {\n    if ([\"amount\", \"type\"].includes(e.target.className) ) {\n      let expenses = [...this.state.expenses]\n      expenses[e.target.dataset.id][e.target.className] = e.target.value.toUpperCase()\n      this.setState({ expenses }, () => console.log(this.state.expenses))\n    } else {\n      this.setState({ [e.target.name]: e.target.value.toUpperCase() })\n    }\n  }\naddExpense = (e) => {\n    this.setState((prevState) => ({\n      expenses: [...prevState.expenses, {amount:\"\", type:\"\"}],\n    }));\n  }\nhandleSubmit = (e) => { e.preventDefault() }\nrender() {\n    let {expenses} = this.state\n    return (\n      <form onSubmit={this.handleSubmit} >\n        <div>\n          <input type=\"text\" />\n        </div>\n        {\n          expenses.map((val, idx)=> {\n            let expenseAmount = `expense-${idx}`,\n                expenseType = `expense-${idx}`\n            return (\n              \n              <div key={idx}>\n                \n                <label htmlFor={expenseAmount}>{`expense #${idx + 1}`}</label>\n                <input\n                  type=\"text\"\n                  name={expenseAmount}\n                  data-id={idx}\n                  id={expenseAmount}\n                  value={expenses[idx].name} \n                  className=\"amount\"\n                  onChange={this.handleChange}\n                />\n                <label htmlFor={expenseType}>Type</label>\n                <select value={expenses[idx].type} data-id={idx} className=\"type\" name={expenseType} onChange={this.handleChange}>\n                  <option value=\"\">Select One</option>\n                  <option value=\"Bills\">Bills</option>\n                  <option value=\"Personal\">Personal</option>\n                  <option value=\"Emergency\">Emergency</option>\n                </select><br></br>\n                <button onClick={this.addExpense}>Add another expense</button>\n                <p></p>\n              </div>\n            )\n          })\n        }\n        <input type=\"submit\" value=\"Submit\" /> \n        <div>\n          {\n            this.state.expenses.map((expense) => {\n              return (\n                <div key={`expense-${expense.type}-${expense.amount}`}>Expense {expense.type} amount: {expense.amount}</div>\n              )\n            })\n          }\n        </div>\n      </form>\n    )\n  }\n}\nexport default Form;"]},"metadata":{},"sourceType":"module"}