{"ast":null,"code":"var _jsxFileName = \"/Users/JigarSwam/Desktop/PayDay/src/pages/index.jsx\";\n\n/* global gapi */\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport GoogleLogin from \"react-google-login\";\n\nconst MainPage = () => {\n  const [isSignedIn, setIsSignedIn] = useState(false);\n\n  const componentDidMount = () => {\n    const successCallback = this.onSuccess.bind(this);\n    window.gapi.load('auth2', () => {\n      this.auth2 = gapi.auth2.init({\n        client_id: 'YOUR_CLIENT_ID.apps.googleusercontent.com'\n      }); // this.auth2.attachClickHandler(document.querySelector('#loginButton'), {}, this.onLoginSuccessful.bind(this))\n\n      this.auth2.then(() => {\n        console.log('on init');\n        this.setState({\n          isSignedIn: this.auth2.isSignedIn.get()\n        });\n      });\n    });\n    window.gapi.load('signin2', function () {\n      // Method 3: render a sign in button\n      // using this method will show Signed In if the user is already signed in\n      var opts = {\n        width: 200,\n        height: 50,\n        client_id: 'YOUR_CLIENT_ID.apps.googleusercontent.com',\n        onsuccess: successCallback\n      };\n      gapi.signin2.render('loginButton', opts);\n    });\n  };\n\n  const onSuccess = () => {\n    console.log('on success');\n    this.setState({\n      isSignedIn: true,\n      err: null\n    });\n  };\n\n  const onLoginFailed = err => {\n    this.setState({\n      isSignedIn: false,\n      error: err\n    });\n  };\n\n  const getContent = () => {\n    if (isSignedIn) {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"hello user, you're signed in \");\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"You are not signed in. Click here to sign in.\"), React.createElement(\"button\", {\n        id: \"loginButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Login with Google\"));\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \" Welcome \"), React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \" Let's get your finances in order. \"), getContent(), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/users\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Users\")));\n};\n\nexport default MainPage;","map":{"version":3,"sources":["/Users/JigarSwam/Desktop/PayDay/src/pages/index.jsx"],"names":["React","useState","Link","GoogleLogin","MainPage","isSignedIn","setIsSignedIn","componentDidMount","successCallback","onSuccess","bind","window","gapi","load","auth2","init","client_id","then","console","log","setState","get","opts","width","height","onsuccess","signin2","render","err","onLoginFailed","error","getContent"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,KAAD,CAA5C;;AAEA,QAAMM,iBAAiB,GAAG,MAAM;AAE9B,UAAMC,eAAe,GAAG,KAAKC,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAxB;AAEAC,IAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,OAAjB,EAA0B,MAAM;AAC9B,WAAKC,KAAL,GAAaF,IAAI,CAACE,KAAL,CAAWC,IAAX,CAAgB;AAC3BC,QAAAA,SAAS,EAAE;AADgB,OAAhB,CAAb,CAD8B,CAK9B;;AAEA,WAAKF,KAAL,CAAWG,IAAX,CAAgB,MAAM;AACpBC,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,aAAKC,QAAL,CAAc;AACZf,UAAAA,UAAU,EAAE,KAAKS,KAAL,CAAWT,UAAX,CAAsBgB,GAAtB;AADA,SAAd;AAGD,OALD;AAMD,KAbD;AAeAV,IAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,SAAjB,EAA4B,YAAW;AACrC;AACA;AACA,UAAIS,IAAI,GAAG;AACTC,QAAAA,KAAK,EAAE,GADE;AAETC,QAAAA,MAAM,EAAE,EAFC;AAGTR,QAAAA,SAAS,EAAE,2CAHF;AAITS,QAAAA,SAAS,EAAEjB;AAJF,OAAX;AAMAI,MAAAA,IAAI,CAACc,OAAL,CAAaC,MAAb,CAAoB,aAApB,EAAmCL,IAAnC;AACD,KAVD;AAWD,GA9BD;;AAgCA,QAAMb,SAAS,GAAG,MAAM;AACtBS,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,SAAKC,QAAL,CAAc;AACZf,MAAAA,UAAU,EAAE,IADA;AAEZuB,MAAAA,GAAG,EAAE;AAFO,KAAd;AAID,GAND;;AAQA,QAAMC,aAAa,GAAID,GAAD,IAAS;AAC7B,SAAKR,QAAL,CAAc;AACZf,MAAAA,UAAU,EAAE,KADA;AAEZyB,MAAAA,KAAK,EAAEF;AAFK,KAAd;AAID,GALD;;AAOA,QAAMG,UAAU,GAAG,MAAM;AACvB,QAAI1B,UAAJ,EAAgB;AACd,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAAP;AACD,KAFD,MAEO;AACL,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDADF,EAEE;AAAQ,QAAA,EAAE,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFF,CADF;AAMD;AACF,GAXD;;AAaA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAFF,EAGG0B,UAAU,EAHb,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CAJF,CADF;AAUD,CAzED;;AA2EA,eAAe3B,QAAf","sourcesContent":["/* global gapi */\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport GoogleLogin from \"react-google-login\"\n\nconst MainPage = () => {\n  const [isSignedIn, setIsSignedIn] = useState(false);\n\n  const componentDidMount = () => {\n\n    const successCallback = this.onSuccess.bind(this);\n    \n    window.gapi.load('auth2', () => {\n      this.auth2 = gapi.auth2.init({\n        client_id: 'YOUR_CLIENT_ID.apps.googleusercontent.com',\n      })\n\n      // this.auth2.attachClickHandler(document.querySelector('#loginButton'), {}, this.onLoginSuccessful.bind(this))\n\n      this.auth2.then(() => {\n        console.log('on init');\n        this.setState({\n          isSignedIn: this.auth2.isSignedIn.get(),\n        });\n      });\n    });    \n\n    window.gapi.load('signin2', function() {\n      // Method 3: render a sign in button\n      // using this method will show Signed In if the user is already signed in\n      var opts = {\n        width: 200,\n        height: 50,\n        client_id: 'YOUR_CLIENT_ID.apps.googleusercontent.com',\n        onsuccess: successCallback\n      }\n      gapi.signin2.render('loginButton', opts)\n    })\n  }\n\n  const onSuccess = () => {\n    console.log('on success')\n    this.setState({\n      isSignedIn: true,\n      err: null\n    })\n  }\n\n  const onLoginFailed = (err) => {\n    this.setState({\n      isSignedIn: false,\n      error: err,\n    })\n  }\n\n  const getContent = () => {\n    if (isSignedIn) {\n      return <p>hello user, you're signed in </p>;\n    } else {\n      return (\n        <div>\n          <p>You are not signed in. Click here to sign in.</p>\n          <button id=\"loginButton\">Login with Google</button>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div>\n      <h3> Welcome </h3>\n      <small> Let's get your finances in order. </small>\n      {getContent()}\n      <h4>\n        <Link to=\"/users\">Users</Link>\n      </h4>\n    </div>\n  );\n};\n\nexport default MainPage;\n"]},"metadata":{},"sourceType":"module"}